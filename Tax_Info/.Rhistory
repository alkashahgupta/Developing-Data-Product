testobj <- makeCacheMatrix(x)
testobj$get()
cacheSolve(testobj)
cacheSolve(testobj)
names(testobj)
library(datasets)
data(iris)
names(iris)
head(iris)
iris[iris$Species = "virginica",c(1,5)]
iris["Species" = "virginica",c(1,5)]
iris[1,2]
iris[iris$Species == "virginica",c(1,5)]
iris[iris$Species == "virginica","Sepal.Length"]
mean(iris[iris$Species == "virginica","Sepal.Length"])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
names(mtcars)
str(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?tapply
tapply(mtcars$hp,mtcars$cyl,mean)
a<-tapply(mtcars$hp,mtcars$cyl,mean)
a
a[1]
a[[1]
]
a[[1]]-a[[3]]
debug(ls)
ls()
5
q
qbeta(0.75,0,1)
qbeta(0.75,1,1)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
sum(x.p)
sum(x*p)
1*0.1 + 2*0.2 +3*0.3 +4*0.4
install.packages("Rserve")
library(Rserve)
Rserve()
Rserve()
Rserve(args="--no-save")
Rserve(args="--no-save")
library(Rserve)
Rserve()
library(Rserve)
Rserve(args="--no-save")
library(Rserve)
Rserve(args="--no-save")
qt(.95,df=21)
qt(0.025,df=21)
qt(0.025,df=8)
2.3*30/sqrt(9)
1100-23
2.3*sqrt(2)/3
2/(2.3*sqrt(2)/3)
6/2.3
qt(0.025,df=9)
0.6+0.68
1.28/10
sqrt(1.28/10)
sqrt(1.28/10)*2.26
(sqrt(1.28/10)*2.26 )-2
-(sqrt(1.28/10)*2.26 )-2
2.26*0.6/sqrt(10)
0.43-2
2.26*0.68/sqrt(10)
-2-.48
qt(0.025,df=9)
qt(0.05,df=9)
qt(0.025,df=8)
pbinom(2,size=4,prob=.5,lower.tail=FALSE)
ppois(9,17.87,lower.tail=TRUE)
pnorm((0.01658-0.01)/(0.004))-pnorm((3.42/1000-0.01)/0.004)
1-0.90
data(mtcars)
data<-data(mtcars)
str(data)
data(mtcars)
str(mtcars)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
beta1<-cor(y,x)*sd(y)/sd(x)
beta1
lm(y~x-1)
lm(mpg~wt,mtcars)
beta1<-cor(mtcars$mpg,mtcars$wt)*sd(mtcars$mpg)/sd(mtcars$wt)
beta1
.5*(1/(1/2))
0.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(8.58-mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.18, -1.54, 0.42, 0.95)
mean(x)
w <- c(2, 1, 3, 1)
mean(x*w)
(x*w)/sum(w)
sum(x*w)/sum(w)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit<- lm(y~x)
summary(fit)
data(mtcars)
lm(mpg~wt,mtcars)
fit1<-lm(mpg~wt,mtcars)
summary(fit1)
str(mtcars)
summary(fit1)$sigma
fit1[1,1]
sumCoef <- summary(fit1)$coefficients
sumCoef[1,1]
sumCoef[1,2]
fit1$df
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit1$df) * sumCoef[1, 2]
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit1$df) * sumCoef[2, 2]
help(mtcars)
fit<-lm(mpg~I(wt*1000),mtcars)
summary(fit)
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
3000 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
3000 + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
newdata <- data.frame(x = 3)
newdata <- data.frame(wt = 3)
p2 <- predict(fit1, newdata, interval = ("prediction"))
p2
sumCoef <- summary(fit1)$coefficients
fit<-lm(mpg~I(wt/2),mtcars)
summary(fit)
sumCoef <- summary(fit)$coefficients
sumCoef[2,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[2, 2]
fit2 <- lm(mpg ~ I(wt - mean(wt)), mtcars)
coef(fit2)
sumCoef1 <- summary(fit2)$coefficients
sumCoef1[1,1] + c(-1, 1) * qt(.975, df = fit2$df) * sumCoef1[1, 2]
fit4<-lm(y ~ offset(x))
fit4<-lm(mpg ~ offset(wt),mtcars)
fit4$sigma
summary(fit1)$sigma
summary(fit1)$sigma/summary(fit4)$sigma
var(lm(mpg~wt,mtcars))
var(fit1)
summary(fit1)$sigma
#sqrt(sum(resid(fit)^2) / (n - 2))
nrows(mtcars)
nrow(mtcars)
sqrt(sum(resid(fit1)^2) / 32
)
sqrt(sum(resid(fit1)^2) / 32)/sqrt(sum(resid(fit4)^2) / 32)
data(mtcars)
str(mtcars)
mtcars$am <-as.factor(mtcars$am)
str(mtcars)
model<-lm(mpg~am,mtcars)
summary(model)
head(mtcars$am)
model<-lm(mpg~am-1,mtcars)
summary(model)
model$coefficients
model$coefficients[2]
manual_estimates<-model$coefficients[2]
automatic_estimates<-model$coefficients[1]
difference<- manual_estimates-automatic_estimates
difference
automatic_estimates<-model$coefficients[1,1]
plot(mtcars$mpg,mtcars$am)
plot(mtcars$am,mtcars$mpg)
abline(model)
levels(mtcars$am)
boxplot(mtcars$am,mtcars$mpg)
plot(mtcars$am,mtcars$mpg)
line(density(mtcars$a))
line(density(mtcars$am))
cor(mtcars[1,])
cor(mtcars)
data(mtcars)
cor(mtcars)
cor(mtcars)[1,]
summary(lm(mpg~.,mtcars))
summary(lm(mpg~cyl+disp,mtcars))
summary(lm(mpg~cyl+wt+hp+am,mtcars))
summary(lm(mpg~wt+hp+am,mtcars))
summary(lm(mpg~wt+hp+am+disp,mtcars))
model2<-lm(mpg~am+hp+wt,mtcars)
summary(model2)
mtcars$am <-as.factor(mtcars$am)
model2<-lm(mpg~am+hp+wt,mtcars)
summary(model2)
anova(model1,model2)
anova(model,model2)
diff<-model2$coefficients[2]
diff
coef(model2)[2]
coef(model2)[1,2]
install.packages("swirl")
library(swirl)
swirl()
plot(child~parent,galton)
plot(jitter(child,4)~parent,galton)
regrline<-lm(child~parent,galton)
abline(regrline,lwd=3,col='red')
summary(regrline)
fit<-lm(child~parent,galton)
summary(fit)
fit$residuals
mean(fit$residuals)
cov(fit$residuals,galton$parent)
ols.ic<-fit$coef[1]
ols.slope<- fit$coef[2]
sqe(ols.slope+sl,ols.intercept+ic) == sqe(ols.slope, ols.intercept) + sum(est(sl,ic)Ë†2 )
ols.slope-ols.ic
lhs-rhs
lhs
all.equal(lhs,rhs)
varChild<-var(galton$child)
varRes<-var(fit$residuals)
varEst<-var(est(galton$parent))
varEst<-var(est(fit)
)
varEst<-var(est)
varEst<-var(est(galton$child))
varEst<-var(est(ols.ic+ols.slope*galton$parent))
varEst<-var(est(galton$parent,ols.ic,ols.slope))
varEst<-var(est(galton$parent,ols.ic))
info()
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild,varRes+varEst)
efit<-lm(accel~mag+dist,attenu)
mean(efit$residuals)
cov(efit$residuals,attenu$mag)
cov(efit$residuals,attenu$dist)
data(swiss)
fit1<- lm(Fertility~Agriculture,data=swiss)
summary(fit1)
summary(fit1)$cov.unscaled[2,2]
summary(fit1)$cov.unscaled[2,1]
summary(fit1)$cov
library(swirl)
swirl()
library(swirl)
swirl()
cor(gpa_nor,gch_nor)
l_nor<-lm(gpa_nor~gch_nor)
l_nor<-lm(gch_nor~gpa_nor)
fit<- lm(child~parent,galton)
sqrt(fit$residuals/(n-2))
sqrt(sum(fit$residuals^2)/(n-2))
summary(fit)$sigma
sqrt(deviance(fit)/(n-2))
mu<-mean(galton$child)
sTot<- (galton$child-mu)^2
sTot<-sum( (galton$child-mu)^2)
sRes<-deviance(fit)
1-sRes/sTot
summary(fit)$r.squared
cor(galton$child,galton$parent)^2
ones<-rep(1,nrow(galton))
lm(child~ones+parent-1,galton)
lm(child~parent,galton)
lm(child ~ 1, galton)
view(trees)
View(trees)
fit<-lm(Volume~Girth+ Height+Constant-1)
fit<-lm(Volume~Girth+ Height+Constant-1,trees)
trees2<- eliminate("Girth",trees)
head(trees2)
fit2<-lm(Volume~Height+Constant-1,trees2)
lapply(list(fit,fit2),coef)
lm(Fertility~.,swiss)
all<-lm(Fertility~.,swiss)
summary(all)
summary(lm(Fertility~Agriculture,swiss))
cor(swiss$Examination,swiss$Education)
cor(swiss$Agriculture,swiss$Education)
makelms()
ec<-swiss$Examination+swiss$Catholic
efit<-lm(Fertility~.+ec,swiss)
efit$coefficients-fit$coefficients
efit$coefficients-all$coefficients
all$coefficients-efit$coefficients
6
dim(spray)
dim(InsectSprays)
head(InsectSprays,n=2)
head(InsectSprays,n=15)
head(InsectSprays,15)
A
sA
summary(InsectSpary[,2])
summary(InsectSparys[,2])
summary(InsectSprays[,2])
sapply(InsectSprays[,2],class())
sapply(InsectSprays,class())
sapply(InsectSprays,class)
fit<-lm(count~spray,InsectSprays)
summary(fit)$coef
est<-(summary(fit)$coef)[,1]
est<-summary(fit)$coef[,1]
mean(sA)
mean(sB)
nfit<-lm(count~spray-1,InsectSprays)
summary(nfit)$coef
spray2<- relevel(InsectSprays$spray,"C")
fit2<- lm(count~spray2,InsectSprays)
summary(fit2)[,1]
summary(fit2)$coef[,1]
summary(fit2)$coef
mean(sC)
(fit$coef[3]-fit$coef[2])/1.6011
(fit$coef[2]-fit$coef[3])/1.6011
exit()
0
0
info()
nxt()
main()
dim(hunger)
948
names(hunger)
fit<-lm(Year~Numeric,hunger)
fit<-lm(Numeric~Year,hunger)
summary(fit)$coef
lmF<- lm(Numeric~Year,hunger[hunger$Sex=="Female"])
lmF<- lm(Numeric~Year,hunger[hunger$Sex=="Female",])
lmF<- lm(Numeric[Sex=="Female"~Year[Sex=="Female"],hunger)
lmF<- lm(Numeric[Sex=="Female"]~Year[Sex=="Female"],hunger)
lmm<- lm(Numeric[Sex=="Male"]~Year[Sex=="Male"],hunger)
lmM<- lm(Numeric[Sex=="Male"]~Year[Sex=="Male"],hunger)
lmBoth<- lm(Numeric~Year+Sex, hunger)
summary(lmBoth)
lmInter<- lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)$coef
summary(lmInter)
info()
main()
library(swirl)
swirl()
info()
main()
dim(hunger)
948
names(hunger)
fit<- lm(Numeric~predictor,data=hunger)
fit<- lm(Numeric~Year,data=hunger)
summary(fit)
summary(fit)$coef
lmF<-lm(hunger$Numeric[hunger$Sex=="Female"]~hunger$Year[hunger$Sex=="Female"])
lmF<-lm(hunger$Numeric[hunger$Sex=="Male"]~hunger$Year[hunger$Sex=="Male"])
lmM<-lm(hunger$Numeric[hunger$Sex=="Male"]~hunger$Year[hunger$Sex=="Male"])
lmBoth<-lm(Numeric~Year+Sex, hunger)
summary(lmBoth)
lmInter<- lm(Numeric~Year+Sex+Sex*Year,hunger)
summary(lmInter)
fit<-lm(y~x,out2)
plot(fit,which=1)
fitno<-lm(y~x,out[-1,])
fitno<-lm(y~x,out2[-1,])
plot(fitno,which=1)
coef(fit)-coef(fitno)
head(dfbeta(fit))
resno<- out2[1,"y"]-predict(fitno,out2[1,])
1-resid(fit)[1]/resno
head(hatvalues(fit))
sigma<- resid(fit)/deviance(fit)
sigma<- sqrt(deviance(fit)/df.residual(fit))
rstd<-sigma*sqrt(1-hatvalues(fit))
rstd<-resid(fit)/(sigma*sqrt(1-hatvalues(fit)))
head(cbind(rstd,rstandard(fit)))
plot(fit,which=3)
plot(fit,which=2)
sigma1<- sqrt(deviance(fito)/df.residual(fitno))
sigma1<- sqrt(deviance(fitno)/df.residual(fitno))
rstd<-resid(fitno)/(sigma1*sqrt(1-hatvalues(fitno)))
resid(fit)[1]/(sigma1*sqrt(1-hatvalues(fit)[1]))
head(rstudent(fit))
dy<-predict(fitno,out2)-predict(fit,out2)
dy/(2*sigma^2)
sum(dy/(2*sigma^2))
sum(dy^2)/(2*sigma^2)
plot(fit,which=5)
data(shuttle)
?shuttle
library(MASS)
?shuttle
data(shuttle)
fit<- glm(use~wind,shuttle)
fit<- glm(use~wind,family="binomial",shuttle)
summary(fit)
fit<- glm(use~wind+magn,family="binomial",shuttle)
summary(fit)
swirl()
swirl()
rgp1()
rgp2()
head(swiss)
mdl<- lm(Fertility~.,swiss)
vif(mdl)
mdl2<- lm(Feritility~Agriculture+Education+Catholic+Infant.Mortality,data)
mdl2<- lm(Feritility~Agriculture+Education+Catholic+Infant.Mortality,swiss)
mdl2<- lm(Fertility~Agriculture+Education+Catholic+Infant.Mortality,swiss)
vif(mdl2)
swirl()
x1c<-simbias()
apply(x1c,1,mean)
fit1<-lm(Fertility~Agriculture,swiss)
fit3<-lm(Fertility~Agriculture+Examination+Education)
fit3<-lm(Fertility~Agriculture+Examination+Education,swiss)
anova(fit1,fit3)
deviance(fit3)
d<-deviance(fit3)/4
d<-deviance(fit3)/43
n<-(deviance(fit1)-deviance(fit3))/(2)
n<-(deviance(fit1)-deviance(fit3))/2
n/d
pf(n/d,2,43,lower.tail=FALSE)
shapiro.test(fit3$residuals)
anova(fit1,fit3,fit5,fit6)
view(ravenData)
View(ravenData)
mdl<-glm(ravenWinNum~ravenScore,family="binomial",ravenData)
lodds<-predict(mdl,data.frame(ravenScore=c(0,3,6)))
exp(lodds)/(1+exp(lodds))
summary(mdl)
exp(confint(mdl))
anova(mdl)
qchisq(0.95,1)
var(rpois(1000,50))
nxt()
head(hits)
class(hits$date)
as.integer(head(hits[,'date']))
mdl<-glm(visits~date,poisson,hits)
summary(mdl)
exp(confint(mdl,'date'))
which.max(hits[,'visits'])
hits[704,]
lambda<-mdl$fitted.values[704]
qpois(.95,lambda)
mdl2<-glm(visits~date,offset=log(visits+1),poisson,hits)
mdl2<-glm(simplystats~date,poisson,hits,,offset=log(visits+1))
qpois(.95,mdl2$fitted.values[704])
install.packages("caret")
install.packages("AppliedPredictiveModeling")
library(AppliedPredictiveModeling)
library(caret)
data(AlzheimerDisease)
head(AlzheimerDisease)
predictors
head(predictors)
head(predictors,n=1)
names(predictors)
names(diagnosis)
help AlzheimerDisease
help (AlzheimerDisease)
??AlzheimerDisease
library(AppliedPredictiveModeling)
data(concrete)
library(caret)
set.seed(975)
inTrain = createDataPartition(mixtures$CompressiveStrength, p = 3/4)[[1]]
training = mixtures[ inTrain,]
testing = mixtures[-inTrain,]
head(concrete)
library("Hmisc")
install.packages("Hmisc")
library(Hmisc)
?cut2
#(x=training[,c()])
names(concrete)
featurePlot(x=training[,c( "Cement","BlastFurnaceSlag","FlyAsh", "Water","Superplasticizer","CoarseAggregate","FineAggregate","Age")], y=training$CompressiveStrength, plot="pairs")
library(caret)
install.packages("manipulate")
library(manipulate)
myplot <- function(s){
plot()
}
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot,s = slider(0,2,step=0.1))
manipulate(myPlot(s),s = slider(0,2,step=0.1))
manipulate(myPlot(s),slider = slider(0,2,step=0.1))
manipulate(myPlot(s),slider = x(0,2,step=0.1))
manipulate(myPlot(s),x.s= slider(0,2,step=0.1))
setwd("~/Dropbox/Coursera/Data Science Specialization/Developing data products/Tax_Info")
library(shiny)
library(shinyapps)
shinyapps::setAccountInfo(name='audtax', token='0F6B615F7098C9AAFD3C7BD4FBDF2296', secret='iPS7oFECz7IeEvcz1ciWgRtEbyBnFCd7EnmvPrnA')
deployApp()
deployApp()
deployApp()
2. Temporary Budget Repair Levy; this levy is payable at a rate of 2% for taxable incomes over $180,000.
2. Temporary Budget Repair Levy; this levy is payable at a rate of 2% for taxable incomes over $180,000.
deployApp()
setwd("~/Dropbox/Coursera/Data Science Specialization/Developing data products/Tax_Info")
